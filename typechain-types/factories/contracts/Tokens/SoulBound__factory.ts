/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SoulBound,
  SoulBoundInterface,
} from "../../../contracts/Tokens/SoulBound";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "person",
        type: "address",
      },
    ],
    name: "checkBarrelOfPerson",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "claimBarrel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "personToBarrel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rewardBarrel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardedBarrel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601981527f4b6e696768742054656d706c65722044697374696c6c6572790000000000000060208083019182528351808501909452600384526212d51160ea1b9084015281519192916200007291600091620000a3565b50805162000088906001906020840190620000a3565b5050600780546001600160a01b031916331790555062000186565b828054620000b19062000149565b90600052602060002090601f016020900481019282620000d5576000855562000120565b82601f10620000f057805160ff191683800117855562000120565b8280016001018555821562000120579182015b828111156200012057825182559160200191906001019062000103565b506200012e92915062000132565b5090565b5b808211156200012e576000815560010162000133565b600181811c908216806200015e57607f821691505b602082108114156200018057634e487b7160e01b600052602260045260246000fd5b50919050565b61181680620001966000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80635514c0ed116100a257806395d89b411161007157806395d89b4114610261578063a22cb46514610269578063b88d4fde1461027c578063c87b56dd1461028f578063e985e9c5146102a257600080fd5b80635514c0ed146102075780636352211e1461021a57806370a082311461022d5780637851be5a1461024e57600080fd5b8063081812fc116100e9578063081812fc14610180578063095ea7b3146101ab57806323b872dd146101be5780633cce5826146101d157806342842e0e146101f457600080fd5b806301d410f41461011b57806301ffc9a714610130578063069964331461015857806306fdde0314610178575b600080fd5b61012e6101293660046112d0565b6102de565b005b61014361013e366004611301565b610319565b60405190151581526020015b60405180910390f35b61016b6101663660046112d0565b61036b565b60405161014f9190611376565b61016b610405565b61019361018e366004611389565b610497565b6040516001600160a01b03909116815260200161014f565b61012e6101b93660046113a2565b6104be565b61012e6101cc3660046113cc565b6105d9565b6101436101df3660046112d0565b600a6020526000908152604090205460ff1681565b61012e6102023660046113cc565b61060a565b61016b6102153660046112d0565b610625565b610193610228366004611389565b6106d1565b61024061023b3660046112d0565b610731565b60405190815260200161014f565b61024061025c366004611494565b6107b7565b61016b61087c565b61012e6102773660046114dd565b61088b565b61012e61028a366004611519565b61089a565b61016b61029d366004611389565b6108d2565b6101436102b0366004611595565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6007546001600160a01b031633146102f557600080fd5b6001600160a01b03166000908152600a60205260409020805460ff19166001179055565b60006001600160e01b031982166380ac58cd60e01b148061034a57506001600160e01b03198216635b5e139f60e01b145b8061036557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60096020526000908152604090208054610384906115c8565b80601f01602080910402602001604051908101604052809291908181526020018280546103b0906115c8565b80156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b505050505081565b606060008054610414906115c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610440906115c8565b801561048d5780601f106104625761010080835404028352916020019161048d565b820191906000526020600020905b81548152906001019060200180831161047057829003601f168201915b5050505050905090565b60006104a2826109e3565b506000908152600460205260409020546001600160a01b031690565b60006104c9826106d1565b9050806001600160a01b0316836001600160a01b0316141561053c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610558575061055881336102b0565b6105ca5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610533565b6105d48383610a45565b505050565b6105e33382610ab3565b6105ff5760405162461bcd60e51b815260040161053390611603565b6105d4838383610b31565b6105d48383836040518060200160405280600081525061089a565b6001600160a01b038116600090815260096020526040902080546060919061064c906115c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610678906115c8565b80156106c55780601f1061069a576101008083540402835291602001916106c5565b820191906000526020600020905b8154815290600101906020018083116106a857829003601f168201915b50505050509050919050565b6000818152600260205260408120546001600160a01b0316806103655760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610533565b60006001600160a01b03821661079b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610533565b506001600160a01b031660009081526003602052604090205490565b336000908152600a602052604081205460ff1661080f5760405162461bcd60e51b815260206004820152601660248201527510985c9c995b081a5cc81b9bdd081c995dd85c99195960521b6044820152606401610533565b61081d600880546001019055565b600061082860085490565b90506108343382610ccd565b61083e8184610e0f565b336000908152600960209081526040909120845161085e9286019061121b565b50336000908152600a60205260409020805460ff1916905592915050565b606060018054610414906115c8565b610896338383610ea9565b5050565b6108a43383610ab3565b6108c05760405162461bcd60e51b815260040161053390611603565b6108cc84848484610f78565b50505050565b60606108dd826109e3565b600082815260066020526040812080546108f6906115c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610922906115c8565b801561096f5780601f106109445761010080835404028352916020019161096f565b820191906000526020600020905b81548152906001019060200180831161095257829003601f168201915b50505050509050600061098d60408051602081019091526000815290565b90508051600014156109a0575092915050565b8151156109d25780826040516020016109ba929190611651565b60405160208183030381529060405292505050919050565b6109db84610fab565b949350505050565b6000818152600260205260409020546001600160a01b0316610a425760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610533565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a7a826106d1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610abf836106d1565b9050806001600160a01b0316846001600160a01b03161480610b0657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109db5750836001600160a01b0316610b1f84610497565b6001600160a01b031614949350505050565b826001600160a01b0316610b44826106d1565b6001600160a01b031614610ba85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610533565b6001600160a01b038216610c0a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610533565b610c15600082610a45565b6001600160a01b0383166000908152600360205260408120805460019290610c3e908490611696565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c6c9084906116ad565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610d235760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610533565b6000818152600260205260409020546001600160a01b031615610d885760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610533565b6001600160a01b0382166000908152600360205260408120805460019290610db19084906116ad565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610e8a5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610533565b600082815260066020908152604090912082516105d49284019061121b565b816001600160a01b0316836001600160a01b03161415610f0b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610533565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f83848484610b31565b610f8f8484848461101f565b6108cc5760405162461bcd60e51b8152600401610533906116c5565b6060610fb6826109e3565b6000610fcd60408051602081019091526000815290565b90506000815111610fed5760405180602001604052806000815250611018565b80610ff78461111d565b604051602001611008929190611651565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561111257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611063903390899088908890600401611717565b6020604051808303816000875af192505050801561109e575060408051601f3d908101601f1916820190925261109b91810190611754565b60015b6110f8573d8080156110cc576040519150601f19603f3d011682016040523d82523d6000602084013e6110d1565b606091505b5080516110f05760405162461bcd60e51b8152600401610533906116c5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109db565b506001949350505050565b6060816111415750506040805180820190915260018152600360fc1b602082015290565b8160005b811561116b578061115581611771565b91506111649050600a836117a2565b9150611145565b60008167ffffffffffffffff81111561118657611186611408565b6040519080825280601f01601f1916602001820160405280156111b0576020820181803683370190505b5090505b84156109db576111c5600183611696565b91506111d2600a866117b6565b6111dd9060306116ad565b60f81b8183815181106111f2576111f26117ca565b60200101906001600160f81b031916908160001a905350611214600a866117a2565b94506111b4565b828054611227906115c8565b90600052602060002090601f016020900481019282611249576000855561128f565b82601f1061126257805160ff191683800117855561128f565b8280016001018555821561128f579182015b8281111561128f578251825591602001919060010190611274565b5061129b92915061129f565b5090565b5b8082111561129b57600081556001016112a0565b80356001600160a01b03811681146112cb57600080fd5b919050565b6000602082840312156112e257600080fd5b611018826112b4565b6001600160e01b031981168114610a4257600080fd5b60006020828403121561131357600080fd5b8135611018816112eb565b60005b83811015611339578181015183820152602001611321565b838111156108cc5750506000910152565b6000815180845261136281602086016020860161131e565b601f01601f19169290920160200192915050565b602081526000611018602083018461134a565b60006020828403121561139b57600080fd5b5035919050565b600080604083850312156113b557600080fd5b6113be836112b4565b946020939093013593505050565b6000806000606084860312156113e157600080fd5b6113ea846112b4565b92506113f8602085016112b4565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561143957611439611408565b604051601f8501601f19908116603f0116810190828211818310171561146157611461611408565b8160405280935085815286868601111561147a57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156114a657600080fd5b813567ffffffffffffffff8111156114bd57600080fd5b8201601f810184136114ce57600080fd5b6109db8482356020840161141e565b600080604083850312156114f057600080fd5b6114f9836112b4565b91506020830135801515811461150e57600080fd5b809150509250929050565b6000806000806080858703121561152f57600080fd5b611538856112b4565b9350611546602086016112b4565b925060408501359150606085013567ffffffffffffffff81111561156957600080fd5b8501601f8101871361157a57600080fd5b6115898782356020840161141e565b91505092959194509250565b600080604083850312156115a857600080fd5b6115b1836112b4565b91506115bf602084016112b4565b90509250929050565b600181811c908216806115dc57607f821691505b602082108114156115fd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6000835161166381846020880161131e565b83519083019061167781836020880161131e565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116a8576116a8611680565b500390565b600082198211156116c0576116c0611680565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061174a9083018461134a565b9695505050505050565b60006020828403121561176657600080fd5b8151611018816112eb565b600060001982141561178557611785611680565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826117b1576117b161178c565b500490565b6000826117c5576117c561178c565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122028f58a4bd6b6d96e61f79e739abc695f9e1e44a3c29221df2fd4fd63873f551664736f6c634300080a0033";

type SoulBoundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SoulBoundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SoulBound__factory extends ContractFactory {
  constructor(...args: SoulBoundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SoulBound> {
    return super.deploy(overrides || {}) as Promise<SoulBound>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SoulBound {
    return super.attach(address) as SoulBound;
  }
  override connect(signer: Signer): SoulBound__factory {
    return super.connect(signer) as SoulBound__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SoulBoundInterface {
    return new utils.Interface(_abi) as SoulBoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulBound {
    return new Contract(address, _abi, signerOrProvider) as SoulBound;
  }
}
