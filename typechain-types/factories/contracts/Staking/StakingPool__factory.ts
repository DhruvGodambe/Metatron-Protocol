/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StakingPool,
  StakingPoolInterface,
} from "../../../contracts/Staking/StakingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "StakingPool__StakeFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "StakingPool__WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "WithdrewStake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastDepositedTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c3f380380610c3f83398101604081905261002f91610074565b600080546001600160a01b031916331790556001600160a01b039182166080521660a0526100a7565b80516001600160a01b038116811461006f57600080fd5b919050565b6000806040838503121561008757600080fd5b61009083610058565b915061009e60208401610058565b90509250929050565b60805160a051610b5e6100e1600039600081816102f2015261068a01526000818161024b015281816104fb01526108ee0152610b5e6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806370a08231116100b85780638b8763471161007c5780638b8763471461029f5780638da5cb5b146102bf578063a694fc3a146102d2578063cd3daf9d146102e5578063d1af0c7d146102ed578063df136d651461031457600080fd5b806370a082311461022657806372f702f3146102465780637519ab50146102855780637b0a47ee1461028e57806380faa57d1461029757600080fd5b80633d18b912116100ff5780633d18b9121461019d5780634aefdccd146101a557806351d70bc4146101c557806367d3b488146101fd5780636e1dc66e1461020657600080fd5b80628cc2621461013b5780630700037d146101615780630fb5a6b41461018157806318160ddd1461018a5780633ccfd60b14610193575b600080fd5b61014e610149366004610a3e565b61031d565b6040519081526020015b60405180910390f35b61014e61016f366004610a3e565b60086020526000908152604090205481565b61014e60015481565b61014e600c5481565b61019b61039a565b005b61019b6105e1565b61014e6101b3366004610a3e565b600b6020526000908152604090205481565b6101d86101d3366004610a67565b6106fd565b604080516001600160a01b039094168452602084019290925290820152606001610158565b61014e60025481565b61014e610214366004610a3e565b600a6020526000908152604090205481565b61014e610234366004610a3e565b60096020526000908152604090205481565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610158565b61014e60035481565b61014e60045481565b61014e61073a565b61014e6102ad366004610a3e565b60076020526000908152604090205481565b60005461026d906001600160a01b031681565b61019b6102e0366004610a67565b61074d565b61014e6109c7565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b61014e60055481565b6001600160a01b0381166000908152600860209081526040808320546007909252822054670de0b6b3a7640000906103536109c7565b61035d9190610a96565b6001600160a01b0385166000908152600960205260409020546103809190610aad565b61038a9190610acc565b6103949190610aee565b92915050565b336103a36109c7565b6005556103ae61073a565b6003556001600160a01b038116156103f5576103c98161031d565b6001600160a01b0382166000908152600860209081526040808320939093556005546007909152919020555b33600090815260096020526040902054806104445760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b60448201526064015b60405180910390fd5b336000908152600a6020526040902054611c20906104629042610a96565b10156104c35760405162461bcd60e51b815260206004820152602a60248201527f557365722063616e6e6f7420636c61696d2072657761726473206265666f7265604482015269206475652074696d652160b01b606482015260840161043b565b336000818152600960205260408082208290555163a9059cbb60e01b8152600481019290925260248201839052906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190610b06565b90508061058b5760405163957d127760e01b81526004810183905260240161043b565b336000818152600b602052604090819020429081905590518492917f874b6b6176c92c12e9ffa729ba947c2b035854d42b9df613ee4100f085481367916105d491815260200190565b60405180910390a3505050565b336105ea6109c7565b6005556105f561073a565b6003556001600160a01b0381161561063c576106108161031d565b6001600160a01b0382166000908152600860209081526040808320939093556005546007909152919020555b3360009081526008602052604090205480156106f95733600081815260086020526040808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156106d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f79190610b06565b505b5050565b6006818154811061070d57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b600061074842600254610a25565b905090565b336107566109c7565b60055561076161073a565b6003556001600160a01b038116156107a85761077c8161031d565b6001600160a01b0382166000908152600860209081526040808320939093556005546007909152919020555b600082116107e55760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b604482015260640161043b565b3360009081526009602052604081208054849290610804908490610aee565b90915550506040805160608101825233808252426020830190815282840186815260068054600181018255600091825294517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600390960295860180546001600160a01b0319166001600160a01b0392831617905592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4086015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d419094019390935592516323b872dd60e01b815260048101919091523060248201526044810185905290917f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190610b06565b90508061097e5760405163f85d42e360e01b81526004810184905260240161043b565b336000818152600a602052604090819020429081905590518592917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90916105d491815260200190565b6000600c546000036109da575060055490565b60646003546109e761073a565b6109f19190610a96565b6004546109fe9190610aad565b610a09906014610aad565b610a139190610acc565b61074890670de0b6b3a7640000610aad565b600081831115610a355781610a37565b825b9392505050565b600060208284031215610a5057600080fd5b81356001600160a01b0381168114610a3757600080fd5b600060208284031215610a7957600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610aa857610aa8610a80565b500390565b6000816000190483118215151615610ac757610ac7610a80565b500290565b600082610ae957634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610b0157610b01610a80565b500190565b600060208284031215610b1857600080fd5b81518015158114610a3757600080fdfea2646970667358221220d3de1cef863ec76dd5aa1829b0f92a6724828157d478b612a8f74fc6e345066764736f6c634300080d0033";

type StakingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingPool__factory extends ContractFactory {
  constructor(...args: StakingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingPool> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      overrides || {}
    ) as Promise<StakingPool>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      overrides || {}
    );
  }
  override attach(address: string): StakingPool {
    return super.attach(address) as StakingPool;
  }
  override connect(signer: Signer): StakingPool__factory {
    return super.connect(signer) as StakingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingPoolInterface {
    return new utils.Interface(_abi) as StakingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingPool {
    return new Contract(address, _abi, signerOrProvider) as StakingPool;
  }
}
