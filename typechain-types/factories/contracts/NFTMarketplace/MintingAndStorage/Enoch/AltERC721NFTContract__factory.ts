/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AltERC721NFTContract,
  AltERC721NFTContractInterface,
} from "../../../../../contracts/NFTMarketplace/MintingAndStorage/Enoch/AltERC721NFTContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintNewNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6138038062001a618339810160408190526200003491620002c9565b8251839083906200004d90600090602085019062000149565b5080516200006390600190602084019062000149565b505050620000b16040518060400160405280601e81526020017f5468697320697320616e204e465420636f6e74726163742e2057686f61210000815250620000da60201b620007f71760201c565b600880546001600160a01b0319166001600160a01b039290921691909117905550620003c89050565b6200012581604051602401620000f1919062000356565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b179091526200012816565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805462000157906200038b565b90600052602060002090601f0160209004810192826200017b5760008555620001c6565b82601f106200019657805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c6578251825591602001919060010190620001a9565b50620001d4929150620001d8565b5090565b5b80821115620001d45760008155600101620001d9565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200022257818101518382015260200162000208565b8381111562000232576000848401525b50505050565b600082601f8301126200024a57600080fd5b81516001600160401b0380821115620002675762000267620001ef565b604051601f8301601f19908116603f01168101908282118183101715620002925762000292620001ef565b81604052838152866020858801011115620002ac57600080fd5b620002bf84602083016020890162000205565b9695505050505050565b600080600060608486031215620002df57600080fd5b83516001600160401b0380821115620002f757600080fd5b620003058783880162000238565b945060208601519150808211156200031c57600080fd5b506200032b8682870162000238565b604086015190935090506001600160a01b03811681146200034b57600080fd5b809150509250925092565b60208152600082518060208401526200037781604085016020870162000205565b601f01601f19169190910160400192915050565b600181811c90821680620003a057607f821691505b60208210811415620003c257634e487b7160e01b600052602260045260246000fd5b50919050565b61168980620003d86000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb46514610212578063b88d4fde14610225578063c87b56dd14610238578063e985e9c51461024b57600080fd5b806342842e0e146101d15780636352211e146101e457806370a08231146101f757806395d89b411461020a57600080fd5b8063095ea7b3116100d3578063095ea7b31461018057806323b872dd1461019557806330bdb351146101a85780633157631f146101be57600080fd5b806301ffc9a71461010557806302d05d3f1461012d57806306fdde0314610158578063081812fc1461016d575b600080fd5b610118610113366004611142565b610287565b60405190151581526020015b60405180910390f35b600854610140906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b6101606102d9565b60405161012491906111b7565b61014061017b3660046111ca565b61036b565b61019361018e3660046111fa565b610392565b005b6101936101a3366004611224565b6104ad565b6101b06104de565b604051908152602001610124565b6101b06101cc3660046112ec565b6104ee565b6101936101df366004611224565b61058f565b6101406101f23660046111ca565b6105aa565b6101b0610205366004611335565b61060a565b610160610690565b610193610220366004611350565b61069f565b61019361023336600461138c565b6106ae565b6101606102463660046111ca565b6106e6565b610118610259366004611408565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102b857506001600160e01b03198216635b5e139f60e01b145b806102d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102e89061143b565b80601f01602080910402602001604051908101604052809291908181526020018280546103149061143b565b80156103615780601f1061033657610100808354040283529160200191610361565b820191906000526020600020905b81548152906001019060200180831161034457829003601f168201915b5050505050905090565b60006103768261083d565b506000908152600460205260409020546001600160a01b031690565b600061039d826105aa565b9050806001600160a01b0316836001600160a01b031614156104105760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061042c575061042c8133610259565b61049e5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610407565b6104a8838361089c565b505050565b6104b7338261090a565b6104d35760405162461bcd60e51b815260040161040790611476565b6104a8838383610988565b60006104e960075490565b905090565b6008546000906001600160a01b0316331461054b5760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c792043726561746f722063616e2063616c6c20746869730000000000006044820152606401610407565b610559600780546001019055565b600061056460075490565b60085490915061057d906001600160a01b031682610b24565b6105878184610c66565b90505b919050565b6104a8838383604051806020016040528060008152506106ae565b6000818152600260205260408120546001600160a01b0316806105875760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610407565b60006001600160a01b0382166106745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610407565b506001600160a01b031660009081526003602052604090205490565b6060600180546102e89061143b565b6106aa338383610d00565b5050565b6106b8338361090a565b6106d45760405162461bcd60e51b815260040161040790611476565b6106e084848484610dcf565b50505050565b60606106f18261083d565b6000828152600660205260408120805461070a9061143b565b80601f01602080910402602001604051908101604052809291908181526020018280546107369061143b565b80156107835780601f1061075857610100808354040283529160200191610783565b820191906000526020600020905b81548152906001019060200180831161076657829003601f168201915b5050505050905060006107a160408051602081019091526000815290565b90508051600014156107b4575092915050565b8151156107e65780826040516020016107ce9291906114c4565b60405160208183030381529060405292505050919050565b6107ef84610e02565b949350505050565b61083a8160405160240161080b91906111b7565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610e76565b50565b6000818152600260205260409020546001600160a01b031661083a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610407565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108d1826105aa565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610916836105aa565b9050806001600160a01b0316846001600160a01b0316148061095d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107ef5750836001600160a01b03166109768461036b565b6001600160a01b031614949350505050565b826001600160a01b031661099b826105aa565b6001600160a01b0316146109ff5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610407565b6001600160a01b038216610a615760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610407565b610a6c60008261089c565b6001600160a01b0383166000908152600360205260408120805460019290610a95908490611509565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ac3908490611520565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610b7a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610407565b6000818152600260205260409020546001600160a01b031615610bdf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610407565b6001600160a01b0382166000908152600360205260408120805460019290610c08908490611520565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610ce15760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610407565b600082815260066020908152604090912082516104a892840190611093565b816001600160a01b0316836001600160a01b03161415610d625760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610407565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610dda848484610988565b610de684848484610e97565b6106e05760405162461bcd60e51b815260040161040790611538565b6060610e0d8261083d565b6000610e2460408051602081019091526000815290565b90506000815111610e445760405180602001604052806000815250610e6f565b80610e4e84610f95565b604051602001610e5f9291906114c4565b6040516020818303038152906040525b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006001600160a01b0384163b15610f8a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610edb90339089908890889060040161158a565b6020604051808303816000875af1925050508015610f16575060408051601f3d908101601f19168201909252610f13918101906115c7565b60015b610f70573d808015610f44576040519150601f19603f3d011682016040523d82523d6000602084013e610f49565b606091505b508051610f685760405162461bcd60e51b815260040161040790611538565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107ef565b506001949350505050565b606081610fb95750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fe35780610fcd816115e4565b9150610fdc9050600a83611615565b9150610fbd565b60008167ffffffffffffffff811115610ffe57610ffe611260565b6040519080825280601f01601f191660200182016040528015611028576020820181803683370190505b5090505b84156107ef5761103d600183611509565b915061104a600a86611629565b611055906030611520565b60f81b81838151811061106a5761106a61163d565b60200101906001600160f81b031916908160001a90535061108c600a86611615565b945061102c565b82805461109f9061143b565b90600052602060002090601f0160209004810192826110c15760008555611107565b82601f106110da57805160ff1916838001178555611107565b82800160010185558215611107579182015b828111156111075782518255916020019190600101906110ec565b50611113929150611117565b5090565b5b808211156111135760008155600101611118565b6001600160e01b03198116811461083a57600080fd5b60006020828403121561115457600080fd5b8135610e6f8161112c565b60005b8381101561117a578181015183820152602001611162565b838111156106e05750506000910152565b600081518084526111a381602086016020860161115f565b601f01601f19169290920160200192915050565b602081526000610e6f602083018461118b565b6000602082840312156111dc57600080fd5b5035919050565b80356001600160a01b038116811461058a57600080fd5b6000806040838503121561120d57600080fd5b611216836111e3565b946020939093013593505050565b60008060006060848603121561123957600080fd5b611242846111e3565b9250611250602085016111e3565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561129157611291611260565b604051601f8501601f19908116603f011681019082821181831017156112b9576112b9611260565b816040528093508581528686860111156112d257600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156112fe57600080fd5b813567ffffffffffffffff81111561131557600080fd5b8201601f8101841361132657600080fd5b6107ef84823560208401611276565b60006020828403121561134757600080fd5b610e6f826111e3565b6000806040838503121561136357600080fd5b61136c836111e3565b91506020830135801515811461138157600080fd5b809150509250929050565b600080600080608085870312156113a257600080fd5b6113ab856111e3565b93506113b9602086016111e3565b925060408501359150606085013567ffffffffffffffff8111156113dc57600080fd5b8501601f810187136113ed57600080fd5b6113fc87823560208401611276565b91505092959194509250565b6000806040838503121561141b57600080fd5b611424836111e3565b9150611432602084016111e3565b90509250929050565b600181811c9082168061144f57607f821691505b6020821081141561147057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b600083516114d681846020880161115f565b8351908301906114ea81836020880161115f565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561151b5761151b6114f3565b500390565b60008219821115611533576115336114f3565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115bd9083018461118b565b9695505050505050565b6000602082840312156115d957600080fd5b8151610e6f8161112c565b60006000198214156115f8576115f86114f3565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611624576116246115ff565b500490565b600082611638576116386115ff565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a05398fc6cdc9360b76b0388047f66550490d5dd45eb6158f9336cf71efc828064736f6c634300080a0033";

type AltERC721NFTContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AltERC721NFTContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AltERC721NFTContract__factory extends ContractFactory {
  constructor(...args: AltERC721NFTContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AltERC721NFTContract> {
    return super.deploy(
      _name,
      _symbol,
      _creator,
      overrides || {}
    ) as Promise<AltERC721NFTContract>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _creator,
      overrides || {}
    );
  }
  override attach(address: string): AltERC721NFTContract {
    return super.attach(address) as AltERC721NFTContract;
  }
  override connect(signer: Signer): AltERC721NFTContract__factory {
    return super.connect(signer) as AltERC721NFTContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AltERC721NFTContractInterface {
    return new utils.Interface(_abi) as AltERC721NFTContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AltERC721NFTContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AltERC721NFTContract;
  }
}
