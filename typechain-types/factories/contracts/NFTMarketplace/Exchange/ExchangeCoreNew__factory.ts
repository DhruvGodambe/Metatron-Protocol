/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ExchangeCoreNew,
  ExchangeCoreNewInterface,
} from "../../../../contracts/NFTMarketplace/Exchange/ExchangeCoreNew";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMintingFactory",
        name: "_mintingFactory",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OrderExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cancelledOrders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchange",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "executeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftCollection",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_nftPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_buyerToken",
        type: "address",
      },
    ],
    name: "fixedPricePrimarySale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftCollection",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mintAndTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingFeeFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingFeeFactorMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261708060055560fa6006553480156200001c57600080fd5b5060405162001337380380620013378339810160408190526200003f9162000103565b6200004a336200009a565b6000805460ff60a01b19169055600180546001600160a01b039485166001600160a01b03199182161790915560028054938516938216939093179092556003805491909316911617905562000157565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200010057600080fd5b50565b6000806000606084860312156200011957600080fd5b83516200012681620000ea565b60208501519093506200013981620000ea565b60408501519092506200014c81620000ea565b809150509250925092565b6111d080620001676000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636ede1bbb1161008c578063917e851d11610066578063917e851d14610196578063d2f7265a146101ca578063f018c434146101dd578063f2fde38b146101f057600080fd5b80636ede1bbb14610174578063715018a61461017d5780638da5cb5b1461018557600080fd5b8063020c05ce146100d457806309143c4f146100e9578063157c3633146100fc5780635a0110811461010f5780635c975abb1461012b57806361d027b314610149575b600080fd5b6100e76100e2366004610e0d565b610203565b005b6100e76100f7366004610f0b565b6102af565b6100e761010a366004610f64565b6103fb565b61011860065481565b6040519081526020015b60405180910390f35b600054600160a01b900460ff165b6040519015158152602001610122565b60035461015c906001600160a01b031681565b6040516001600160a01b039091168152602001610122565b61011861271081565b6100e7610555565b6000546001600160a01b031661015c565b6101396101a4366004610fed565b600760209081526000938452604080852082529284528284209052825290205460ff1681565b60045461015c906001600160a01b031681565b6100e76101eb366004610e0d565b610569565b6100e76101fe36600461102e565b610907565b6000610210868685610980565b9050600061021e8584610b31565b905081801561022a5750805b156102a6576001600160a01b038581166000818152600760209081526040808320948c168084529482528083208b8452825291829020805460ff19166001179055815193845283018990528201527fd26d0eaf100efe01fc00473fcd7c0d820f51e58b0ff954d6cdb7d984e000fb1c9060600160405180910390a15b50505050505050565b6004546001600160a01b0316331461030e5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792045786368616e67652063616e2063616c6c2074686973210000000060448201526064015b60405180910390fd5b600154604051633ab2af8560e21b81526000916001600160a01b03169063eacabe1490610341908790879060040161104b565b6020604051808303816000875af1158015610360573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038491906110b0565b905080156103f5576001546040516323b872dd60e01b81526001600160a01b03868116926323b872dd926103c29290911690339087906004016110d2565b600060405180830381600087803b1580156103dc57600080fd5b505af11580156103f0573d6000803e3d6000fd5b505050505b50505050565b604051636eb1769f60e11b81526001600160a01b03838116600483015230602483015285919083169063dd62ed3e90604401602060405180830381865afa15801561044a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046e91906110f6565b10156104ca5760405162461bcd60e51b815260206004820152602560248201527f45786368616e6765206973206e6f7420616c6c6f77656420656e6f75676820746044820152646f6b656e7360d81b6064820152608401610305565b6003546040516323b872dd60e01b81526001600160a01b03808416926323b872dd926104fe928792169089906004016110d2565b6020604051808303816000875af115801561051d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054191906110b0565b5061054d8686856102af565b505050505050565b61055d610cd6565b6105676000610d30565b565b610571610d80565b600061057e868685610980565b9050600061058c8584610b31565b6001600160a01b038087166000908152600760209081526040808320938c1683529281528282208a83529052205490915060ff16826106025760405162461bcd60e51b815260206004820152601260248201527114d95b1b195c881a5cdb89dd081d985b1a5960721b6044820152606401610305565b816106435760405162461bcd60e51b8152602060048201526011602482015270109d5e595c881a5cdb89dd081d985b1a59607a1b6044820152606401610305565b80156106865760405162461bcd60e51b815260206004820152601260248201527113dc99195c881a5cc818d85b98d95b1b195960721b6044820152606401610305565b610698670de0b6b3a764000085611125565b935060006106bd6127106106b760065488610dcd90919063ffffffff16565b90610de0565b6002546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906106f2908a90309086906004016110d2565b6020604051808303816000875af1158015610711573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073591906110b0565b50600061075f6127106106b7610758600654612710610dec90919063ffffffff16565b8990610dcd565b6002546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd90610794908b908b9086906004016110d2565b6020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d791906110b0565b506040516323b872dd60e01b81526001600160a01b038b16906323b872dd90610808908a908c908e906004016110d2565b600060405180830381600087803b15801561082257600080fd5b505af1158015610836573d6000803e3d6000fd5b5050600154604051631bd5a5d360e01b81526001600160a01b038e81166004830152602482018e90528c811660448301529091169250631bd5a5d39150606401600060405180830381600087803b15801561089057600080fd5b505af11580156108a4573d6000803e3d6000fd5b5050604080516001600160a01b038e81168252602082018e90528b8116828401528c16606082015290517f4e1ab81a814e362e1949f27db0ebb266602cb8627246327f36ea0a0f77c735689350908190036080019150a150505050505050505050565b61090f610cd6565b6001600160a01b0381166109745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610305565b61097d81610d30565b50565b6040516331a9108f60e11b81526004810183905260009081906001600160a01b03861690636352211e90602401602060405180830381865afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee9190611144565b9050806001600160a01b0316836001600160a01b031614610a515760405162461bcd60e51b815260206004820152601e60248201527f53656c6c657220646f6573206e6f74206f776e732074686520746f6b656e00006044820152606401610305565b60405163020604bf60e21b8152600481018590526000906001600160a01b0387169063081812fc90602401602060405180830381865afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd9190611144565b90506001600160a01b0381163014610b255760405162461bcd60e51b815260206004820152602560248201527f436f6e7472616374206973206e6f7420617070726f76656420666f72207468696044820152641cc813919560da1b6064820152608401610305565b50600195945050505050565b600254604051636eb1769f60e11b81526001600160a01b038481166004830152306024830152600092849291169063dd62ed3e90604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906110f6565b11610c065760405162461bcd60e51b815260206004820152602760248201527f416c6c6f77616e6365206973206c657373207468616e20746865204e4654277360448201526610383934b1b29760c91b6064820152608401610305565b6002546040516370a0823160e01b81526001600160a01b038581166004830152849216906370a0823190602401602060405180830381865afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7491906110f6565b11610ccd5760405162461bcd60e51b815260206004820152602360248201527f427579657220646f65736e277420686176652073756666696369656e742066756044820152626e647360e81b6064820152608401610305565b50600192915050565b6000546001600160a01b031633146105675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610305565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156105675760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610305565b6000610dd98284611125565b9392505050565b6000610dd98284611161565b6000610dd98284611183565b6001600160a01b038116811461097d57600080fd5b600080600080600060a08688031215610e2557600080fd5b8535610e3081610df8565b9450602086013593506040860135610e4781610df8565b92506060860135610e5781610df8565b949793965091946080013592915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e8f57600080fd5b813567ffffffffffffffff80821115610eaa57610eaa610e68565b604051601f8301601f19908116603f01168101908282118183101715610ed257610ed2610e68565b81604052838152866020858801011115610eeb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f2057600080fd5b8335610f2b81610df8565b9250602084013567ffffffffffffffff811115610f4757600080fd5b610f5386828701610e7e565b925050604084013590509250925092565b60008060008060008060c08789031215610f7d57600080fd5b8635610f8881610df8565b9550602087013567ffffffffffffffff811115610fa457600080fd5b610fb089828a01610e7e565b95505060408701359350606087013592506080870135610fcf81610df8565b915060a0870135610fdf81610df8565b809150509295509295509295565b60008060006060848603121561100257600080fd5b833561100d81610df8565b9250602084013561101d81610df8565b929592945050506040919091013590565b60006020828403121561104057600080fd5b8135610dd981610df8565b60018060a01b038316815260006020604081840152835180604085015260005b818110156110875785810183015185820160600152820161106b565b81811115611099576000606083870101525b50601f01601f191692909201606001949350505050565b6000602082840312156110c257600080fd5b81518015158114610dd957600080fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561110857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561113f5761113f61110f565b500290565b60006020828403121561115657600080fd5b8151610dd981610df8565b60008261117e57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156111955761119561110f565b50039056fea2646970667358221220e24c3bbff157cda3c7bd96f2e6a10d82dd7c3498ccb57e0277fd557ade176a3c64736f6c634300080d0033";

type ExchangeCoreNewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeCoreNewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExchangeCoreNew__factory extends ContractFactory {
  constructor(...args: ExchangeCoreNewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mintingFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExchangeCoreNew> {
    return super.deploy(
      _mintingFactory,
      _weth,
      _treasury,
      overrides || {}
    ) as Promise<ExchangeCoreNew>;
  }
  override getDeployTransaction(
    _mintingFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mintingFactory,
      _weth,
      _treasury,
      overrides || {}
    );
  }
  override attach(address: string): ExchangeCoreNew {
    return super.attach(address) as ExchangeCoreNew;
  }
  override connect(signer: Signer): ExchangeCoreNew__factory {
    return super.connect(signer) as ExchangeCoreNew__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeCoreNewInterface {
    return new utils.Interface(_abi) as ExchangeCoreNewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeCoreNew {
    return new Contract(address, _abi, signerOrProvider) as ExchangeCoreNew;
  }
}
